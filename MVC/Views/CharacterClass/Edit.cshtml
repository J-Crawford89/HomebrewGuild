@model Models.CharacterClassModels.CharacterClassEdit

@{
    ViewBag.Title = "Edit";
}

<div class="pageTitle">
    <h1>Edit: <i>@Html.DisplayFor(model => model.Name)</i></h1>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="formStandardStart">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-row justify-content-center">
            <div class="form-group col-sm-4 col-xl-3 formStandard">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "labelStandard" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control inputStandard", @placeholder = "Class Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-4 col-xl-3 formStandard">
                @Html.LabelFor(model => model.HitDie, htmlAttributes: new { @class = "labelStandard" })
                @Html.EditorFor(model => model.HitDie, new { htmlAttributes = new { @class = "form-control inputStandard", @placeholder = "Hit Die" } })
                @Html.ValidationMessageFor(model => model.HitDie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row justify-content-center">
            <div class="form-group spellCheckboxList">
                @Html.LabelFor(model => model.SavingThrows, htmlAttributes: new { @class = "labelStandard" })
                <div class="checkbox inputStandard">
                    @foreach (var ability in Enum.GetNames(typeof(Data.Enums.Ability)))
                    {
                        <input type="checkbox" name="SavingThrows" value="@ability" @if (Model.SavingThrows.Contains((Data.Enums.Ability)Enum.Parse(typeof(Data.Enums.Ability), ability))) { <text> checked </text> } />
                        @ability
                    }
                </div>
                <hr />
            </div>
        </div>

        <div class="form-row justify-content-center">
            <div class="form-group col-sm-4 col-xl-3 formStandard">
                @Html.LabelFor(model => model.NumberOfSkillProficiencies, htmlAttributes: new { @class = "labelStandard" })
                @Html.EditorFor(model => model.NumberOfSkillProficiencies, new { htmlAttributes = new { @class = "form-control inputStandard", @placeholder = "Number of Skill Proficiencies" } })
                @Html.ValidationMessageFor(model => model.NumberOfSkillProficiencies, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-4 col-xl-3 formStandard spellCheckboxList">
                @Html.LabelFor(model => model.SkillChoices, htmlAttributes: new { @class = "labelStandard" })
                <div class="checkbox inputStandard">
                    <ul class="list-unstyled">
                        @foreach (var skill in Enum.GetNames(typeof(Data.Enums.Skill)))
                        {
                            <li><input type="checkbox" name="SkillChoices" value="@skill" @if (Model.SkillChoices.Contains((Data.Enums.Skill)Enum.Parse(typeof(Data.Enums.Skill), skill))) { <text> checked </text> } /> @skill</li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <!--FEATURES-->
        <div class="form-row justify-content-center tableForm">
            <div class="form-group">
                <h5>Features</h5>
                <table class="table" id="featureTable">
                    <thead>
                        <tr>
                            <th>Feature Name</th>
                            <th>Feature Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Features != null)
                        {
                            int i = -1;
                            foreach (var kvp in Model.Features)
                            {
                                i++;
                                <tr class="featureRow">
                                    <td><input type="text" name="Features[@i].Key" class="form-control key01" value="@kvp.Key" /></td>
                                    <td><textarea name="Features[@i].Value" class="form-control tableTextArea value01">@kvp.Value</textarea></td>
                                    <td><button type="button" id="btnDelete" class="deleteFeature btn btn btn-danger btn-xs">Delete Row</button></td>
                                    <td><input type="hidden" name="Features.Index" value="@i" /></td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr class="featureRow">
                                <td><input type="text" name="Features[0].Key" class="form-control key01" /></td>
                                <td><textarea name="Features[0].Value" class="form-control tableTextArea value01"></textarea></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="form-row">
            <button type="button" id="btnAdd" class="offset-sm-10 btn btn-xs btn-primary addFeature">Add Feature</button>
        </div>

        <div class="formButtons" align="center">
            <ul class="horizontalList">
                <li><button type="button" class="btn btn-cancel">@Html.ActionLink("Cancel", "Index", "CharacterClass", new { onclick = "return confirm('Are you sure you would like to cancel changes and return?')" })</button></li>
                <li><input type="submit" value="Update" class="btn btn-primary" /></li>
            </ul>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $(document).on("click", ".addFeature", function () {
                var rowCount = $('.featureRow').length;
                var featureTable = '<tr class="featureRow">' + '<td><input type="text" name="Features[' + rowCount + '].Key" class="form-control key01" /></td>' +
                    '<td><textarea name="Features[' + rowCount + '].Value" class="form-control tableTextArea value01"></textarea></td>' +
                    '<td><button type="button" id="btnDelete" class="deleteFeature btn btn btn-danger btn-xs">Remove</button></td>' + 
                    '<td><input type="hidden" name="Features.Index" value="' + rowCount + '" /><td>' + '</tr>';
                $('#featureTable').append(featureTable);
            });
            $(document).on("click", ".deleteFeature", function () {
                $(this).closest("tr").remove();
            });
        });
    </script>
    }