@model PagedList.IPagedList<Models.BackgroundModels.BackgroundListItem>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Index";
}

<div class="pageTitle adminTitle">
    <h1>Backgrounds</h1>
</div>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <div class="indexCreateLink">
        <button type="button" value="createBackground" class="btn btn-primary">@Html.ActionLink("Create a Background", "Create", "Background")</button>
    </div>
}

<div class="row justify-content-center">
    <table class="table col-md-10">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter }, new { @class = "linkStandard" })
            </th>
            <th>
                @using (Html.BeginForm("Index", "Background", FormMethod.Get))
                {
                    <div class="input-group">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", style = "border-color: #FFBC0A;", placeholder = "Search ... " })
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-primary"><i class="fas fa-search"></i></button>
                        </div>
                    </div>
                }
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="listButtons">
                    <ul class="horizontalList">
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <li><button type="button" class="btn btn-cancel btn-sm">@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { onclick = "return confirm('Are you sure you want to delete this background?')" })</button></li>
                            <li><button type="button" class="btn btn-primary btn-sm" style="width:108px;">@Html.ActionLink("Edit", "Edit", new { id = item.Id })</button></li>
                        }
                    </ul>
                </td>
            </tr>
        }

    </table>
</div>
@if (Model.PageCount > 1)
{
    <div class="pagerContainer">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
}