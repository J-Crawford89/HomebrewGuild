@model Models.MonsterModels.MonsterCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>MonsterCreate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Size, "Select Size", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Type, "Select Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Alignment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Alignment, "Select Alignment", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Alignment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ArmorClass, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ArmorClass, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ArmorClass, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ArmorType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ArmorType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ArmorType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HitPoints, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HitPoints, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HitPoints, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HitPointEquation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HitPointEquation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HitPointEquation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Speed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Speed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Speed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dexterity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dexterity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Dexterity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Constitution, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Constitution, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Constitution, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Intelligence, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Intelligence, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Intelligence, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Wisdom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Wisdom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Wisdom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Charisma, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Charisma, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Charisma, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--SAVING THROWS - Dictionary<Ability, string> -->
    <div class="form-group">
        @Html.LabelFor(model => model.SavingThrows, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                int abilityCount = Enum.GetNames(typeof(Data.Enums.Ability)).Length;
                for (int i = 0; i < abilityCount; i++)
                {
                    Guid index = Guid.NewGuid();
                    <input type="hidden" name="SavingThrows.Index" value="@index" />
                    @Html.Label(Enum.GetName(typeof(Data.Enums.Ability), i))
                    <input type="checkbox" name="SavingThrows[@index].Key" value="@Enum.GetName(typeof(Data.Enums.Ability), i)" />
                    <input name="SavingThrows[@index].Value" value="" />
                }
            }
        </div>
    </div>

    <!--SKILLS - Dictionary<Skill, string> -->
    <div class="form-group">
        @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                int skillCount = Enum.GetNames(typeof(Data.Enums.Skill)).Length;
                for (int i = 0; i < skillCount; i++)
                {
                    Guid index = Guid.NewGuid();
                    <input type="hidden" name="Skills.Index" value="@index" />
                    @Html.Label(Enum.GetName(typeof(Data.Enums.Skill), i))
                    <input type="checkbox" name="Skills[@index].Key" value="@Enum.GetName(typeof(Data.Enums.Skill), i)" />
                    <input name="Skills[@index].Value" value="" />
                }
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Vulnerabilities, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Vulnerabilities, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Vulnerabilities, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Resistances, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Resistances, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Resistances, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Immunities, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Immunities, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Immunities, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Senses, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Senses, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Senses, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Languages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Languages, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChallengeRating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChallengeRating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ChallengeRating, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--TRAITS-->
    <div class="form-group">
        @Html.LabelFor(model => model.Traits, htmlAttributes: new { @class = "control-label col-md-2" })
        <table class="table" id="traitTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="traitRow">
                    <td><input type="text" name="Traits.Key" class="form-control key01" value="" /></td>
                    <td><input type="text" name="Traits.Value" class="form-control value01" value="" /></td>
                    <td><button type="button" id="btnDelete" class="deleteTrait btn btn btn-danger btn-xs">Remove</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" id="btnAdd" class="btn btn-xs btn-primary addTrait">Add Trait</button>
    </div>

    <!--ACTIONS-->
    <div class="form-group">
        @Html.LabelFor(model => model.Actions, htmlAttributes: new { @class = "control-label col-md-2" })
        <table class="table" id="actionTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="actionRow">
                    <td><input type="text" name="Actions.Key" class="form-control key01" value="" /></td>
                    <td><input type="text" name="Actions.Value" class="form-control value01" value="" /></td>
                    <td><button type="button" id="btnDelete" class="deleteAction btn btn btn-danger btn-xs">Remove</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" id="btnAdd" class="btn btn-xs btn-primary addAction">Add Action</button>
    </div>

    <!--REACTIONS-->
    <div class="form-group">
        @Html.LabelFor(model => model.Reactions, htmlAttributes: new { @class = "control-label col-md-2" })
        <table class="table" id="reactionTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="reactionRow">
                    <td><input type="text" name="Reactions.Key" class="form-control key01" value="" /></td>
                    <td><input type="text" name="Reactions.Value" class="form-control value01" value="" /></td>
                    <td><button type="button" id="btnDelete" class="deleteReaction btn btn btn-danger btn-xs">Remove</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" id="btnAdd" class="btn btn-xs btn-primary addReaction">Add Reaction</button>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumberOfLegendaryActions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumberOfLegendaryActions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumberOfLegendaryActions, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--LEGENDARY-->
    <div class="form-group">
        @Html.LabelFor(model => model.LegendaryActions, htmlAttributes: new { @class = "control-label col-md-2" })
        <table class="table" id="legendaryTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="legendaryRow">
                    <td><input type="text" name="LegendaryActions.Key" class="form-control key01" value="" /></td>
                    <td><input type="text" name="LegendaryActions.Value" class="form-control value01" value="" /></td>
                    <td><button type="button" id="btnDelete" class="deleteLegendary btn btn btn-danger btn-xs">Remove</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" id="btnAdd" class="btn btn-xs btn-primary addLegendary">Add Legendary Action</button>
    </div>

    <!--LAIR-->
    <div class="form-group">
        @Html.LabelFor(model => model.LairActions, htmlAttributes: new { @class = "control-label col-md-2" })
        <table class="table" id="lairTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="lairRow">
                    <td><input type="text" name="LairActions.Key" class="form-control key01" value="" /></td>
                    <td><input type="text" name="LairActions.Value" class="form-control value01" value="" /></td>
                    <td><button type="button" id="btnDelete" class="deleteLair btn btn btn-danger btn-xs">Remove</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" id="btnAdd" class="btn btn-xs btn-primary addLair">Add Lair Action</button>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        $(document).on("click", ".addTrait", function () {
            var rowCount = $('.traitRow').length + 1;
            var traitTable = '<tr class="traitRow">' + '<td><input type="text" name="Traits.Key' + rowCount + '" class="form-control key01" /></td>' +
                '<td><input type="text" name="Traits.Value' + rowCount + '" class="form-control value01" /></td>' +
                '<td><button type="button" id="btnDelete" class="deleteTrait btn btn btn-danger btn-xs">Remove</button></td>' + '</tr>';
            $('#traitTable').append(traitTable);
        });
        $(document).on("click", ".deleteTrait", function () {
            $(this).closest("tr").remove();
        });
        $(document).on("click", ".addAction", function () {
            var rowCount = $('.actionRow').length + 1;
            var actionTable = '<tr class="actionRow">' + '<td><input type="text" name="Actions.Key' + rowCount + '" class="form-control key01" /></td>' +
                '<td><input type="text" name="Actions.Value' + rowCount + '" class="form-control value01" /></td>' +
                '<td><button type="button" id="btnDelete" class="deleteAction btn btn btn-danger btn-xs">Remove</button></td>' + '</tr>';
            $('#actionTable').append(actionTable);
        });
        $(document).on("click", ".deleteAction", function () {
            $(this).closest("tr").remove();
        });
        $(document).on("click", ".addReaction", function () {
            var rowCount = $('.reactionRow').length + 1;
            var reactionTable = '<tr class="reactionRow">' + '<td><input type="text" name="Reactions.Key' + rowCount + '" class="form-control key01" /></td>' +
                '<td><input type="text" name="Reactions.Value' + rowCount + '" class="form-control value01" /></td>' +
                '<td><button type="button" id="btnDelete" class="deleteReaction btn btn btn-danger btn-xs">Remove</button></td>' + '</tr>';
            $('#reactionTable').append(reactionTable);
        });
        $(document).on("click", ".deleteReaction", function () {
            $(this).closest("tr").remove();
        });
        $(document).on("click", ".addLegendary", function () {
            var rowCount = $('.legendaryRow').length + 1;
            var legendaryTable = '<tr class="legendaryRow">' + '<td><input type="text" name="LegendaryActions.Key' + rowCount + '" class="form-control key01" /></td>' +
                '<td><input type="text" name="LegendaryActions.Value' + rowCount + '" class="form-control value01" /></td>' +
                '<td><button type="button" id="btnDelete" class="deleteLegendary btn btn btn-danger btn-xs">Remove</button></td>' + '</tr>';
            $('#legendaryTable').append(legendaryTable);
        });
        $(document).on("click", ".deleteLegendary", function () {
            $(this).closest("tr").remove();
        });
        $(document).on("click", ".addLair", function () {
            var rowCount = $('.lairRow').length + 1;
            var lairTable = '<tr class="lairRow">' + '<td><input type="text" name="LairActions.Key' + rowCount + '" class="form-control key01" /></td>' +
                '<td><input type="text" name="LairActions.Value' + rowCount + '" class="form-control value01" /></td>' +
                '<td><button type="button" id="btnDelete" class="deleteLair btn btn btn-danger btn-xs">Remove</button></td>' + '</tr>';
            $('#lairTable').append(lairTable);
        });
        $(document).on("click", ".deleteLair", function () {
            $(this).closest("tr").remove();
        });
    });
</script>
}