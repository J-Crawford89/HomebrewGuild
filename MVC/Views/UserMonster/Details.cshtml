@model Models.MonsterModels.MonsterDetail

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>MonsterDetail</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Creator)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Creator)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Size)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Size)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Type)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Alignment)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Alignment)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ArmorClass)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ArmorClass)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ArmorType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ArmorType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HitPoints)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HitPoints)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HitPointEquation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HitPointEquation)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Speed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Speed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Strength)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Strength)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Dexterity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Dexterity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Constitution)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Constitution)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Intelligence)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Intelligence)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Wisdom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Wisdom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Charisma)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Charisma)
        </dd>

        @if (Model.SavingThrows != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.SavingThrows)
            </dt>

            <dd>
                ------
            </dd>
            foreach (var kvp in Model.SavingThrows)
            {
                <dt>
                    @Html.Label(kvp.Key.ToString())
                </dt>
                <dd>
                    @Html.Label(kvp.Value.ToString())
                </dd>
            }
        }

        @if (Model.Skills != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Skills)
            </dt>

            <dd>
                ------
            </dd>
            foreach (var kvp in Model.Skills)
            {
                <dt>
                    @Html.Label(kvp.Key.ToString())
                </dt>
                <dd>
                    @Html.Label(kvp.Value.ToString())
                </dd>
            }
        }

        <dt>
            @Html.DisplayNameFor(model => model.Vulnerabilities)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Vulnerabilities)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Resistances)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Resistances)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Immunities)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Immunities)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Senses)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Senses)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Languages)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Languages)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ChallengeRating)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ChallengeRating)
        </dd>

        @if (Model.Traits != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Traits)
            </dt>
            <dd>
                ------
            </dd>

            foreach (var trait in Model.Traits)
            {
                <dt>
                    @Html.Label(trait.Key.ToString())
                </dt>
                <dd>
                    @Html.Label(trait.Value.ToString())
                </dd>
            }
        }

        @if (Model.Actions != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Actions)
            </dt>
            <dd>
                ------
            </dd>

            foreach (var action in Model.Actions)
            {
                <dt>
                    @Html.Label(action.Key.ToString())
                </dt>
                <dd>
                    @Html.Label(action.Value.ToString())
                </dd>
            }
        }

        @if (Model.Reactions != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Reactions)
            </dt>
            <dd>
                ------
            </dd>

            foreach (var reaction in Model.Reactions)
            {
                <dt>
                    @Html.Label(reaction.Key.ToString())
                </dt>
                <dd>
                    @Html.Label(reaction.Value.ToString())
                </dd>
            }
        }

        <dt>
            @Html.DisplayNameFor(model => model.NumberOfLegendaryActions)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumberOfLegendaryActions)
        </dd>

        @if (Model.LegendaryActions != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.LegendaryActions)
            </dt>
            <dd>
                ------
            </dd>

            foreach (var legendaryAction in Model.LegendaryActions)
            {
                <dt>
                    @Html.Label(legendaryAction.Key.ToString())
                </dt>
                <dd>
                    @Html.Label(legendaryAction.Value.ToString())
                </dd>
            }
        }

        @if (Model.LairActions != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.LairActions)
            </dt>
            <dd>
                ------
            </dd>

            foreach (var lairAction in Model.LairActions)
            {
                <dt>
                    @Html.Label(lairAction.Key.ToString())
                </dt>
                <dd>
                    @Html.Label(lairAction.Value.ToString())
                </dd>
            }
        }

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastUpdated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastUpdated)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
